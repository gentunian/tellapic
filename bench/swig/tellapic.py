# This file was automatically generated by SWIG (http://www.swig.org).
# Version 2.0.1
#
# Do not make changes to this file unless you know what you are doing--modify
# the SWIG interface file instead.
# This file is compatible with both classic and new-style classes.

from sys import version_info
if version_info >= (2,6,0):
    def swig_import_helper():
        from os.path import dirname
        import imp
        fp = None
        try:
            fp, pathname, description = imp.find_module('_tellapic', [dirname(__file__)])
        except ImportError:
            import _tellapic
            return _tellapic
        if fp is not None:
            try:
                _mod = imp.load_module('_tellapic', fp, pathname, description)
            finally:
                fp.close()
            return _mod
    _tellapic = swig_import_helper()
    del swig_import_helper
else:
    import _tellapic
del version_info
try:
    _swig_property = property
except NameError:
    pass # Python < 2.2 doesn't have 'property'.
def _swig_setattr_nondynamic(self,class_type,name,value,static=1):
    if (name == "thisown"): return self.this.own(value)
    if (name == "this"):
        if type(value).__name__ == 'SwigPyObject':
            self.__dict__[name] = value
            return
    method = class_type.__swig_setmethods__.get(name,None)
    if method: return method(self,value)
    if (not static) or hasattr(self,name):
        self.__dict__[name] = value
    else:
        raise AttributeError("You cannot add attributes to %s" % self)

def _swig_setattr(self,class_type,name,value):
    return _swig_setattr_nondynamic(self,class_type,name,value,0)

def _swig_getattr(self,class_type,name):
    if (name == "thisown"): return self.this.own()
    method = class_type.__swig_getmethods__.get(name,None)
    if method: return method(self)
    raise AttributeError(name)

def _swig_repr(self):
    try: strthis = "proxy of " + self.this.__repr__()
    except: strthis = ""
    return "<%s.%s; %s >" % (self.__class__.__module__, self.__class__.__name__, strthis,)

try:
    _object = object
    _newclass = 1
except AttributeError:
    class _object : pass
    _newclass = 0


class color_t(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, color_t, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, color_t, name)
    __repr__ = _swig_repr
    __swig_setmethods__["red"] = _tellapic.color_t_red_set
    __swig_getmethods__["red"] = _tellapic.color_t_red_get
    if _newclass:red = _swig_property(_tellapic.color_t_red_get, _tellapic.color_t_red_set)
    __swig_setmethods__["green"] = _tellapic.color_t_green_set
    __swig_getmethods__["green"] = _tellapic.color_t_green_get
    if _newclass:green = _swig_property(_tellapic.color_t_green_get, _tellapic.color_t_green_set)
    __swig_setmethods__["blue"] = _tellapic.color_t_blue_set
    __swig_getmethods__["blue"] = _tellapic.color_t_blue_get
    if _newclass:blue = _swig_property(_tellapic.color_t_blue_get, _tellapic.color_t_blue_set)
    def __init__(self): 
        this = _tellapic.new_color_t()
        try: self.this.append(this)
        except: self.this = this
    __swig_destroy__ = _tellapic.delete_color_t
    __del__ = lambda self : None;
color_t_swigregister = _tellapic.color_t_swigregister
color_t_swigregister(color_t)

END_CAPS_BUTT = _tellapic.END_CAPS_BUTT
END_CAPS_SQUARE = _tellapic.END_CAPS_SQUARE
END_CAPS_ROUND = _tellapic.END_CAPS_ROUND
LINE_JOIN_MITER = _tellapic.LINE_JOIN_MITER
LINE_JOIN_ROUND = _tellapic.LINE_JOIN_ROUND
LINE_JOIN_BEVEL = _tellapic.LINE_JOIN_BEVEL
class point_t(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, point_t, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, point_t, name)
    __repr__ = _swig_repr
    __swig_setmethods__["x"] = _tellapic.point_t_x_set
    __swig_getmethods__["x"] = _tellapic.point_t_x_get
    if _newclass:x = _swig_property(_tellapic.point_t_x_get, _tellapic.point_t_x_set)
    __swig_setmethods__["y"] = _tellapic.point_t_y_set
    __swig_getmethods__["y"] = _tellapic.point_t_y_get
    if _newclass:y = _swig_property(_tellapic.point_t_y_get, _tellapic.point_t_y_set)
    def __init__(self): 
        this = _tellapic.new_point_t()
        try: self.this.append(this)
        except: self.this = this
    __swig_destroy__ = _tellapic.delete_point_t
    __del__ = lambda self : None;
point_t_swigregister = _tellapic.point_t_swigregister
point_t_swigregister(point_t)

class header_t(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, header_t, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, header_t, name)
    __repr__ = _swig_repr
    __swig_setmethods__["endian"] = _tellapic.header_t_endian_set
    __swig_getmethods__["endian"] = _tellapic.header_t_endian_get
    if _newclass:endian = _swig_property(_tellapic.header_t_endian_get, _tellapic.header_t_endian_set)
    __swig_setmethods__["cbyte"] = _tellapic.header_t_cbyte_set
    __swig_getmethods__["cbyte"] = _tellapic.header_t_cbyte_get
    if _newclass:cbyte = _swig_property(_tellapic.header_t_cbyte_get, _tellapic.header_t_cbyte_set)
    __swig_setmethods__["ssize"] = _tellapic.header_t_ssize_set
    __swig_getmethods__["ssize"] = _tellapic.header_t_ssize_get
    if _newclass:ssize = _swig_property(_tellapic.header_t_ssize_get, _tellapic.header_t_ssize_set)
    def __init__(self): 
        this = _tellapic.new_header_t()
        try: self.this.append(this)
        except: self.this = this
    __swig_destroy__ = _tellapic.delete_header_t
    __del__ = lambda self : None;
header_t_swigregister = _tellapic.header_t_swigregister
header_t_swigregister(header_t)

class pmessage_t(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, pmessage_t, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, pmessage_t, name)
    __repr__ = _swig_repr
    __swig_setmethods__["idto"] = _tellapic.pmessage_t_idto_set
    __swig_getmethods__["idto"] = _tellapic.pmessage_t_idto_get
    if _newclass:idto = _swig_property(_tellapic.pmessage_t_idto_get, _tellapic.pmessage_t_idto_set)
    __swig_setmethods__["text"] = _tellapic.pmessage_t_text_set
    __swig_getmethods__["text"] = _tellapic.pmessage_t_text_get
    if _newclass:text = _swig_property(_tellapic.pmessage_t_text_get, _tellapic.pmessage_t_text_set)
    def __init__(self): 
        this = _tellapic.new_pmessage_t()
        try: self.this.append(this)
        except: self.this = this
    __swig_destroy__ = _tellapic.delete_pmessage_t
    __del__ = lambda self : None;
pmessage_t_swigregister = _tellapic.pmessage_t_swigregister
pmessage_t_swigregister(pmessage_t)

class message_t(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, message_t, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, message_t, name)
    __repr__ = _swig_repr
    __swig_setmethods__["idfrom"] = _tellapic.message_t_idfrom_set
    __swig_getmethods__["idfrom"] = _tellapic.message_t_idfrom_get
    if _newclass:idfrom = _swig_property(_tellapic.message_t_idfrom_get, _tellapic.message_t_idfrom_set)
    __swig_getmethods__["type"] = _tellapic.message_t_type_get
    if _newclass:type = _swig_property(_tellapic.message_t_type_get)
    def __init__(self): 
        this = _tellapic.new_message_t()
        try: self.this.append(this)
        except: self.this = this
    __swig_destroy__ = _tellapic.delete_message_t
    __del__ = lambda self : None;
message_t_swigregister = _tellapic.message_t_swigregister
message_t_swigregister(message_t)

class message_t_type(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, message_t_type, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, message_t_type, name)
    __repr__ = _swig_repr
    __swig_setmethods__["text"] = _tellapic.message_t_type_text_set
    __swig_getmethods__["text"] = _tellapic.message_t_type_text_get
    if _newclass:text = _swig_property(_tellapic.message_t_type_text_get, _tellapic.message_t_type_text_set)
    __swig_setmethods__["private"] = _tellapic.message_t_type_private_set
    __swig_getmethods__["private"] = _tellapic.message_t_type_private_get
    if _newclass:private = _swig_property(_tellapic.message_t_type_private_get, _tellapic.message_t_type_private_set)
    def __init__(self): 
        this = _tellapic.new_message_t_type()
        try: self.this.append(this)
        except: self.this = this
    __swig_destroy__ = _tellapic.delete_message_t_type
    __del__ = lambda self : None;
message_t_type_swigregister = _tellapic.message_t_type_swigregister
message_t_type_swigregister(message_t_type)

class figure_t(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, figure_t, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, figure_t, name)
    __repr__ = _swig_repr
    __swig_setmethods__["point2"] = _tellapic.figure_t_point2_set
    __swig_getmethods__["point2"] = _tellapic.figure_t_point2_get
    if _newclass:point2 = _swig_property(_tellapic.figure_t_point2_get, _tellapic.figure_t_point2_set)
    __swig_setmethods__["linejoin"] = _tellapic.figure_t_linejoin_set
    __swig_getmethods__["linejoin"] = _tellapic.figure_t_linejoin_get
    if _newclass:linejoin = _swig_property(_tellapic.figure_t_linejoin_get, _tellapic.figure_t_linejoin_set)
    __swig_setmethods__["endcaps"] = _tellapic.figure_t_endcaps_set
    __swig_getmethods__["endcaps"] = _tellapic.figure_t_endcaps_get
    if _newclass:endcaps = _swig_property(_tellapic.figure_t_endcaps_get, _tellapic.figure_t_endcaps_set)
    __swig_setmethods__["miterlimit"] = _tellapic.figure_t_miterlimit_set
    __swig_getmethods__["miterlimit"] = _tellapic.figure_t_miterlimit_get
    if _newclass:miterlimit = _swig_property(_tellapic.figure_t_miterlimit_get, _tellapic.figure_t_miterlimit_set)
    __swig_setmethods__["dash_phase"] = _tellapic.figure_t_dash_phase_set
    __swig_getmethods__["dash_phase"] = _tellapic.figure_t_dash_phase_get
    if _newclass:dash_phase = _swig_property(_tellapic.figure_t_dash_phase_get, _tellapic.figure_t_dash_phase_set)
    __swig_setmethods__["dash_array"] = _tellapic.figure_t_dash_array_set
    __swig_getmethods__["dash_array"] = _tellapic.figure_t_dash_array_get
    if _newclass:dash_array = _swig_property(_tellapic.figure_t_dash_array_get, _tellapic.figure_t_dash_array_set)
    def __init__(self): 
        this = _tellapic.new_figure_t()
        try: self.this.append(this)
        except: self.this = this
    __swig_destroy__ = _tellapic.delete_figure_t
    __del__ = lambda self : None;
figure_t_swigregister = _tellapic.figure_t_swigregister
figure_t_swigregister(figure_t)

class text_t(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, text_t, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, text_t, name)
    __repr__ = _swig_repr
    __swig_setmethods__["style"] = _tellapic.text_t_style_set
    __swig_getmethods__["style"] = _tellapic.text_t_style_get
    if _newclass:style = _swig_property(_tellapic.text_t_style_get, _tellapic.text_t_style_set)
    __swig_setmethods__["facelen"] = _tellapic.text_t_facelen_set
    __swig_getmethods__["facelen"] = _tellapic.text_t_facelen_get
    if _newclass:facelen = _swig_property(_tellapic.text_t_facelen_get, _tellapic.text_t_facelen_set)
    __swig_setmethods__["face"] = _tellapic.text_t_face_set
    __swig_getmethods__["face"] = _tellapic.text_t_face_get
    if _newclass:face = _swig_property(_tellapic.text_t_face_get, _tellapic.text_t_face_set)
    __swig_setmethods__["info"] = _tellapic.text_t_info_set
    __swig_getmethods__["info"] = _tellapic.text_t_info_get
    if _newclass:info = _swig_property(_tellapic.text_t_info_get, _tellapic.text_t_info_set)
    def __init__(self): 
        this = _tellapic.new_text_t()
        try: self.this.append(this)
        except: self.this = this
    __swig_destroy__ = _tellapic.delete_text_t
    __del__ = lambda self : None;
text_t_swigregister = _tellapic.text_t_swigregister
text_t_swigregister(text_t)

class ddata_t(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, ddata_t, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, ddata_t, name)
    __repr__ = _swig_repr
    __swig_setmethods__["idfrom"] = _tellapic.ddata_t_idfrom_set
    __swig_getmethods__["idfrom"] = _tellapic.ddata_t_idfrom_get
    if _newclass:idfrom = _swig_property(_tellapic.ddata_t_idfrom_get, _tellapic.ddata_t_idfrom_set)
    __swig_setmethods__["dcbyte"] = _tellapic.ddata_t_dcbyte_set
    __swig_getmethods__["dcbyte"] = _tellapic.ddata_t_dcbyte_get
    if _newclass:dcbyte = _swig_property(_tellapic.ddata_t_dcbyte_get, _tellapic.ddata_t_dcbyte_set)
    __swig_setmethods__["number"] = _tellapic.ddata_t_number_set
    __swig_getmethods__["number"] = _tellapic.ddata_t_number_get
    if _newclass:number = _swig_property(_tellapic.ddata_t_number_get, _tellapic.ddata_t_number_set)
    __swig_setmethods__["width"] = _tellapic.ddata_t_width_set
    __swig_getmethods__["width"] = _tellapic.ddata_t_width_get
    if _newclass:width = _swig_property(_tellapic.ddata_t_width_get, _tellapic.ddata_t_width_set)
    __swig_setmethods__["opacity"] = _tellapic.ddata_t_opacity_set
    __swig_getmethods__["opacity"] = _tellapic.ddata_t_opacity_get
    if _newclass:opacity = _swig_property(_tellapic.ddata_t_opacity_get, _tellapic.ddata_t_opacity_set)
    __swig_setmethods__["color"] = _tellapic.ddata_t_color_set
    __swig_getmethods__["color"] = _tellapic.ddata_t_color_get
    if _newclass:color = _swig_property(_tellapic.ddata_t_color_get, _tellapic.ddata_t_color_set)
    __swig_setmethods__["point1"] = _tellapic.ddata_t_point1_set
    __swig_getmethods__["point1"] = _tellapic.ddata_t_point1_get
    if _newclass:point1 = _swig_property(_tellapic.ddata_t_point1_get, _tellapic.ddata_t_point1_set)
    __swig_getmethods__["type"] = _tellapic.ddata_t_type_get
    if _newclass:type = _swig_property(_tellapic.ddata_t_type_get)
    def __init__(self): 
        this = _tellapic.new_ddata_t()
        try: self.this.append(this)
        except: self.this = this
    __swig_destroy__ = _tellapic.delete_ddata_t
    __del__ = lambda self : None;
ddata_t_swigregister = _tellapic.ddata_t_swigregister
ddata_t_swigregister(ddata_t)

class ddata_t_type(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, ddata_t_type, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, ddata_t_type, name)
    __repr__ = _swig_repr
    __swig_setmethods__["figure"] = _tellapic.ddata_t_type_figure_set
    __swig_getmethods__["figure"] = _tellapic.ddata_t_type_figure_get
    if _newclass:figure = _swig_property(_tellapic.ddata_t_type_figure_get, _tellapic.ddata_t_type_figure_set)
    __swig_setmethods__["text"] = _tellapic.ddata_t_type_text_set
    __swig_getmethods__["text"] = _tellapic.ddata_t_type_text_get
    if _newclass:text = _swig_property(_tellapic.ddata_t_type_text_get, _tellapic.ddata_t_type_text_set)
    def __init__(self): 
        this = _tellapic.new_ddata_t_type()
        try: self.this.append(this)
        except: self.this = this
    __swig_destroy__ = _tellapic.delete_ddata_t_type
    __del__ = lambda self : None;
ddata_t_type_swigregister = _tellapic.ddata_t_type_swigregister
ddata_t_type_swigregister(ddata_t_type)

class svcontrol_t(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, svcontrol_t, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, svcontrol_t, name)
    __repr__ = _swig_repr
    __swig_setmethods__["idfrom"] = _tellapic.svcontrol_t_idfrom_set
    __swig_getmethods__["idfrom"] = _tellapic.svcontrol_t_idfrom_get
    if _newclass:idfrom = _swig_property(_tellapic.svcontrol_t_idfrom_get, _tellapic.svcontrol_t_idfrom_set)
    __swig_setmethods__["info"] = _tellapic.svcontrol_t_info_set
    __swig_getmethods__["info"] = _tellapic.svcontrol_t_info_get
    if _newclass:info = _swig_property(_tellapic.svcontrol_t_info_get, _tellapic.svcontrol_t_info_set)
    def __init__(self): 
        this = _tellapic.new_svcontrol_t()
        try: self.this.append(this)
        except: self.this = this
    __swig_destroy__ = _tellapic.delete_svcontrol_t
    __del__ = lambda self : None;
svcontrol_t_swigregister = _tellapic.svcontrol_t_swigregister
svcontrol_t_swigregister(svcontrol_t)

class stream_t(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, stream_t, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, stream_t, name)
    __repr__ = _swig_repr
    __swig_setmethods__["header"] = _tellapic.stream_t_header_set
    __swig_getmethods__["header"] = _tellapic.stream_t_header_get
    if _newclass:header = _swig_property(_tellapic.stream_t_header_get, _tellapic.stream_t_header_set)
    __swig_getmethods__["data"] = _tellapic.stream_t_data_get
    if _newclass:data = _swig_property(_tellapic.stream_t_data_get)
    def __init__(self): 
        this = _tellapic.new_stream_t()
        try: self.this.append(this)
        except: self.this = this
    __swig_destroy__ = _tellapic.delete_stream_t
    __del__ = lambda self : None;
stream_t_swigregister = _tellapic.stream_t_swigregister
stream_t_swigregister(stream_t)

class stream_t_data(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, stream_t_data, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, stream_t_data, name)
    __repr__ = _swig_repr
    __swig_setmethods__["drawing"] = _tellapic.stream_t_data_drawing_set
    __swig_getmethods__["drawing"] = _tellapic.stream_t_data_drawing_get
    if _newclass:drawing = _swig_property(_tellapic.stream_t_data_drawing_get, _tellapic.stream_t_data_drawing_set)
    __swig_setmethods__["chat"] = _tellapic.stream_t_data_chat_set
    __swig_getmethods__["chat"] = _tellapic.stream_t_data_chat_get
    if _newclass:chat = _swig_property(_tellapic.stream_t_data_chat_get, _tellapic.stream_t_data_chat_set)
    __swig_setmethods__["control"] = _tellapic.stream_t_data_control_set
    __swig_getmethods__["control"] = _tellapic.stream_t_data_control_get
    if _newclass:control = _swig_property(_tellapic.stream_t_data_control_get, _tellapic.stream_t_data_control_set)
    def __init__(self): 
        this = _tellapic.new_stream_t_data()
        try: self.this.append(this)
        except: self.this = this
    __swig_destroy__ = _tellapic.delete_stream_t_data
    __del__ = lambda self : None;
stream_t_data_swigregister = _tellapic.stream_t_data_swigregister
stream_t_data_swigregister(stream_t_data)

MAX_TEXT_SIZE = _tellapic.MAX_TEXT_SIZE
MAX_INFO_SIZE = _tellapic.MAX_INFO_SIZE
MAX_FONTFACE_LEN = _tellapic.MAX_FONTFACE_LEN
ENDIAN_INDEX = _tellapic.ENDIAN_INDEX
CBYTE_INDEX = _tellapic.CBYTE_INDEX
SBYTE_INDEX = _tellapic.SBYTE_INDEX
HEADER_SIZE = _tellapic.HEADER_SIZE
FIG_STREAM_SIZE = _tellapic.FIG_STREAM_SIZE
CTL_STREAM_SIZE = _tellapic.CTL_STREAM_SIZE
DRWU_STREAM_SIZE = _tellapic.DRWU_STREAM_SIZE
DRWI_STREAM_SIZE = _tellapic.DRWI_STREAM_SIZE
MIN_PMSG_STREAM_SIZE = _tellapic.MIN_PMSG_STREAM_SIZE
MIN_BMSG_STREAM_SIZE = _tellapic.MIN_BMSG_STREAM_SIZE
MIN_CTLEXT_STREAM_SIZE = _tellapic.MIN_CTLEXT_STREAM_SIZE
MAX_PMSG_STREAM_SIZE = _tellapic.MAX_PMSG_STREAM_SIZE
MAX_BMSG_STREAM_SIZE = _tellapic.MAX_BMSG_STREAM_SIZE
MAX_CTLEXT_STREAM_SIZE = _tellapic.MAX_CTLEXT_STREAM_SIZE
PMSG_TEXT_OFFSET = _tellapic.PMSG_TEXT_OFFSET
BMSG_TEXT_OFFSET = _tellapic.BMSG_TEXT_OFFSET
DATA_IDFROM_INDEX = _tellapic.DATA_IDFROM_INDEX
DATA_PMSG_IDFROM_INDEX = _tellapic.DATA_PMSG_IDFROM_INDEX
DATA_PMSG_IDTO_INDEX = _tellapic.DATA_PMSG_IDTO_INDEX
DATA_PMSG_TEXT_INDEX = _tellapic.DATA_PMSG_TEXT_INDEX
DATA_BMSG_IDFROM_INDEX = _tellapic.DATA_BMSG_IDFROM_INDEX
DATA_BMSG_TEXT_INDEX = _tellapic.DATA_BMSG_TEXT_INDEX
DDATA_IDFROM_INDEX = _tellapic.DDATA_IDFROM_INDEX
DDATA_DCBYTE_INDEX = _tellapic.DDATA_DCBYTE_INDEX
DDATA_DNUMBER_INDEX = _tellapic.DDATA_DNUMBER_INDEX
DDATA_WIDTH_INDEX = _tellapic.DDATA_WIDTH_INDEX
DDATA_OPACITY_INDEX = _tellapic.DDATA_OPACITY_INDEX
DDATA_COLOR_INDEX = _tellapic.DDATA_COLOR_INDEX
DDATA_COORDX1_INDEX = _tellapic.DDATA_COORDX1_INDEX
DDATA_COORDY1_INDEX = _tellapic.DDATA_COORDY1_INDEX
DDATA_COORDX2_INDEX = _tellapic.DDATA_COORDX2_INDEX
DDATA_COORDY2_INDEX = _tellapic.DDATA_COORDY2_INDEX
DDATA_JOINS_INDEX = _tellapic.DDATA_JOINS_INDEX
DDATA_CAPS_INDEX = _tellapic.DDATA_CAPS_INDEX
DDATA_MITER_INDEX = _tellapic.DDATA_MITER_INDEX
DDATA_DASHPHASE_INDEX = _tellapic.DDATA_DASHPHASE_INDEX
DDATA_DASHARRAY_INDEX = _tellapic.DDATA_DASHARRAY_INDEX
DDATA_FONTSTYLE_INDEX = _tellapic.DDATA_FONTSTYLE_INDEX
DDATA_FONTLEN_INDEX = _tellapic.DDATA_FONTLEN_INDEX
DDATA_FONTFACE_INDEX = _tellapic.DDATA_FONTFACE_INDEX
DATA_CLADD_IDFROM_INDEX = _tellapic.DATA_CLADD_IDFROM_INDEX
DATA_CLADD_NAME_INDEX = _tellapic.DATA_CLADD_NAME_INDEX
DATA_CLRM_IDFROM_INDEX = _tellapic.DATA_CLRM_IDFROM_INDEX
DATA_CLIST_IDFROM_INDEX = _tellapic.DATA_CLIST_IDFROM_INDEX
DATA_PWD_IDFROM_INDEX = _tellapic.DATA_PWD_IDFROM_INDEX
DATA_PWD_INDEX = _tellapic.DATA_PWD_INDEX
DATA_FILE_IDFROM_INDEX = _tellapic.DATA_FILE_IDFROM_INDEX
DATA_FILE_INDEX = _tellapic.DATA_FILE_INDEX
CTL_CL_BMSG = _tellapic.CTL_CL_BMSG
CTL_CL_PMSG = _tellapic.CTL_CL_PMSG
CTL_CL_FIG = _tellapic.CTL_CL_FIG
CTL_CL_DRW = _tellapic.CTL_CL_DRW
CTL_CL_CLIST = _tellapic.CTL_CL_CLIST
CTL_CL_PWD = _tellapic.CTL_CL_PWD
CTL_CL_FILEASK = _tellapic.CTL_CL_FILEASK
CTL_CL_FILEOK = _tellapic.CTL_CL_FILEOK
CTL_CL_DISC = _tellapic.CTL_CL_DISC
CTL_CL_NAME = _tellapic.CTL_CL_NAME
CTL_FAIL = _tellapic.CTL_FAIL
CTL_SV_CLADD = _tellapic.CTL_SV_CLADD
CTL_SV_CLRM = _tellapic.CTL_SV_CLRM
CTL_SV_CLIST = _tellapic.CTL_SV_CLIST
CTL_SV_PWDASK = _tellapic.CTL_SV_PWDASK
CTL_SV_PWDOK = _tellapic.CTL_SV_PWDOK
CTL_SV_PWDFAIL = _tellapic.CTL_SV_PWDFAIL
CTL_SV_FILE = _tellapic.CTL_SV_FILE
CTL_SV_ID = _tellapic.CTL_SV_ID
CTL_SV_NAMEINUSE = _tellapic.CTL_SV_NAMEINUSE
FONT_STYLE_NORMAL = _tellapic.FONT_STYLE_NORMAL
FONT_STYLE_BOLD = _tellapic.FONT_STYLE_BOLD
FONT_STYLE_ITALIC = _tellapic.FONT_STYLE_ITALIC
FONT_STYLE_BOLD_ITALIC = _tellapic.FONT_STYLE_BOLD_ITALIC
TOOL_MASK = _tellapic.TOOL_MASK
TOOL_MARKER = _tellapic.TOOL_MARKER
TOOL_PATH = _tellapic.TOOL_PATH
TOOL_ELLIPSE = _tellapic.TOOL_ELLIPSE
TOOL_RECT = _tellapic.TOOL_RECT
TOOL_TEXT = _tellapic.TOOL_TEXT
TOOL_ERASER = _tellapic.TOOL_ERASER
TOOL_PENCIL = _tellapic.TOOL_PENCIL
TOOL_LINE = _tellapic.TOOL_LINE
BUTTON_LEFT = _tellapic.BUTTON_LEFT
BUTTON_RIGHT = _tellapic.BUTTON_RIGHT
BUTTON_MIDDLE = _tellapic.BUTTON_MIDDLE
BUTTON_MASK = _tellapic.BUTTON_MASK
EVENT_MASK = _tellapic.EVENT_MASK
EVENT_PRESS = _tellapic.EVENT_PRESS
EVENT_DRAG = _tellapic.EVENT_DRAG
EVENT_RELEASE = _tellapic.EVENT_RELEASE
EVENT_NULL = _tellapic.EVENT_NULL
EVENT_PLEFT = _tellapic.EVENT_PLEFT
EVENT_PRIGHT = _tellapic.EVENT_PRIGHT
EVENT_PMIDDLE = _tellapic.EVENT_PMIDDLE
EVENT_DLEFT = _tellapic.EVENT_DLEFT
EVENT_DRIGHT = _tellapic.EVENT_DRIGHT
EVENT_DMIDDLE = _tellapic.EVENT_DMIDDLE
EVENT_RLEFT = _tellapic.EVENT_RLEFT
EVENT_RRIGHT = _tellapic.EVENT_RRIGHT
EVENT_RMIDDLE = _tellapic.EVENT_RMIDDLE

def tellapic_read_pwd(*args):
  return _tellapic.tellapic_read_pwd(*args)
tellapic_read_pwd = _tellapic.tellapic_read_pwd

def tellapic_read_data_b(*args):
  return _tellapic.tellapic_read_data_b(*args)
tellapic_read_data_b = _tellapic.tellapic_read_data_b

def tellapic_read_header_b(*args):
  return _tellapic.tellapic_read_header_b(*args)
tellapic_read_header_b = _tellapic.tellapic_read_header_b

def tellapic_send(*args):
  return _tellapic.tellapic_send(*args)
tellapic_send = _tellapic.tellapic_send

def tellapic_connect_to(*args):
  return _tellapic.tellapic_connect_to(*args)
tellapic_connect_to = _tellapic.tellapic_connect_to

def tellapic_close_fd(*args):
  return _tellapic.tellapic_close_fd(*args)
tellapic_close_fd = _tellapic.tellapic_close_fd

def tellapic_read_stream_b(*args):
  return _tellapic.tellapic_read_stream_b(*args)
tellapic_read_stream_b = _tellapic.tellapic_read_stream_b

def tellapic_send_text(*args):
  return _tellapic.tellapic_send_text(*args)
tellapic_send_text = _tellapic.tellapic_send_text

def tellapic_send_fig(*args):
  return _tellapic.tellapic_send_fig(*args)
tellapic_send_fig = _tellapic.tellapic_send_fig

def tellapic_send_chatp(*args):
  return _tellapic.tellapic_send_chatp(*args)
tellapic_send_chatp = _tellapic.tellapic_send_chatp

def tellapic_send_chatb(*args):
  return _tellapic.tellapic_send_chatb(*args)
tellapic_send_chatb = _tellapic.tellapic_send_chatb

def tellapic_send_ctlext(*args):
  return _tellapic.tellapic_send_ctlext(*args)
tellapic_send_ctlext = _tellapic.tellapic_send_ctlext

def tellapic_send_ctl(*args):
  return _tellapic.tellapic_send_ctl(*args)
tellapic_send_ctl = _tellapic.tellapic_send_ctl

def tellapic_build_ctle(*args):
  return _tellapic.tellapic_build_ctle(*args)
tellapic_build_ctle = _tellapic.tellapic_build_ctle

def tellapic_build_ctl(*args):
  return _tellapic.tellapic_build_ctl(*args)
tellapic_build_ctl = _tellapic.tellapic_build_ctl

def tellapic_build_chat(*args):
  return _tellapic.tellapic_build_chat(*args)
tellapic_build_chat = _tellapic.tellapic_build_chat


